{"version":3,"sources":["Joke.js","JokeList.js","App.js","serviceWorker.js","index.js"],"names":["Joke","props","state","upvote","bind","downvote","this","votes","handleVote","id","className","onClick","style","borderColor","getColor","text","getEmoji","Component","JokeList","jokes","JSON","parse","window","localStorage","getItem","loading","seenJokes","Set","map","j","handleClick","length","getJokes","numJokesToGet","axios","get","headers","Accept","res","newJoke","data","joke","has","push","uuid","setState","st","setItem","stringify","alert","delta","sort","a","b","src","alt","key","defaultProps","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.04cd7f23.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Joke.css';\n\nclass Joke extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t\n\t\t};\n\t\tthis.upvote = this.upvote.bind(this);\n\t\tthis.downvote = this.downvote.bind(this);\n\t}\n\t\n\tgetColor() {\n\t\tif (this.props.votes >= 15) {\n\t\t  return \"#4CAF50\";\n\t\t} else if (this.props.votes >= 12) {\n\t\t  return \"#8BC34A\";\n\t\t} else if (this.props.votes >= 9) {\n\t\t  return \"#CDDC39\";\n\t\t} else if (this.props.votes >= 6) {\n\t\t  return \"#FFEB3B\";\n\t\t} else if (this.props.votes >= 3) {\n\t\t  return \"#FFC107\";\n\t\t} else if (this.props.votes >= 0) {\n\t\t  return \"#FF9800\";\n\t\t} else {\n\t\t  return \"#f44336\";\n\t\t}\n\t}\n\t\n\tgetEmoji() {\n\t\tif (this.props.votes >= 15) {\n\t\t\treturn \"em em-rolling_on_the_floor_laughing\";\n\t\t} else if (this.props.votes >= 12) {\n\t\t\treturn \"em em-laughing\";\n\t\t} else if (this.props.votes >= 9) {\n\t\t\treturn \"em em-smiley\";\n\t\t} else if (this.props.votes >= 6) {\n\t\t\treturn \"em em-slightly_smiling_face\";\n\t\t} else if (this.props.votes >= 3) {\n\t\t\treturn \"em em-neutral_face\";\n\t\t} else if (this.props.votes >= 0) {\n\t\t\treturn \"em em-confused\";\n\t\t} else {\n\t\t\treturn \"em em-angry\";\n\t\t}\n\t}\n\t\n\tupvote(){\n\t\tthis.props.handleVote(this.props.id,1);\n\t}\n\t\n\tdownvote(){\n\t\tthis.props.handleVote(this.props.id,-1);\n\t}\n\t\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"Joke\">\n\t\t\t\t<div className=\"Joke-buttons\">\n\t\t\t\t\t<i className=\"fas fa-arrow-up\" onClick={this.upvote}></i>\n\t\t\t\t\t<span className=\"Joke-votes\" style={{borderColor: this.getColor()}}>{this.props.votes}</span>\n\t\t\t\t\t<i className=\"fas fa-arrow-down\" onClick={this.downvote}></i>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Joke-text\">\n\t\t\t\t\t{this.props.text}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Joke-smiley\">\n\t\t\t\t\t<i className={this.getEmoji()} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Joke;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport './JokeList.css';\nimport Joke from './Joke';\nimport { v4 as uuid } from 'uuid';\n\nclass JokeList extends Component{\n\tstatic defaultProps = {\n\t\tnumJokesToGet: 10\n\t};\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tjokes: JSON.parse(window.localStorage.getItem(\"jokes\")) || [],\n\t\t\tloading: false\n\t\t}\n\t\tthis.seenJokes = new Set(this.state.jokes.map(j => j.text));\n\t\tthis.handleVote = this.handleVote.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\t\n\tcomponentDidMount(){\n\t\tif(this.state.jokes.length === 0) this.getJokes();\n\t}\n\n\tasync getJokes() {\n\t\ttry{\n\t\t\tlet jokes = [];\n\t\t\tlet newJoke;\n\t\t\twhile(jokes.length < this.props.numJokesToGet){\n\t\t\t\tlet res = await axios.get(\"https://icanhazdadjoke.com/\", { \n\t\t\t\t\theaders: { Accept: \"application/json\"}\n\t\t\t\t});\n\t\t\t\tnewJoke = res.data.joke;\n\t\t\t\tif(!this.seenJokes.has(newJoke)){\n\t\t\t\t\tjokes.push({ text: res.data.joke, votes: 0, id: uuid()});\n\t\t\t\t} \n\t\t\t}\n\t\t\tthis.setState(st => ({\n\t\t\t\tloading: false,\n\t\t\t\tjokes: [...st.jokes, ...jokes]\n\t\t\t}),\n\t\t\t() => window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes))\t\t\t  \n\t\t\t);\n\t\t} catch(err){\n\t\t\talert(err);\n\t\t\tthis.setState({loading: false});\n\t\t}\n\t}\n\n\thandleVote(id, delta){\n\t\tthis.setState( st => ({\n\t\t\tjokes: st.jokes.map(j =>\n\t\t\t\tj.id === id ? {...j, votes: j.votes + delta} : j\n\t\t\t)\n\t\t}),\n\t\t() => window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes))\t\t\t  \n\t\t);\n\t}\n\n\thandleClick(){\n\t\tthis.setState({loading: true}, this.getJokes);\n\t}\n\t\n\trender(){\n\t\tif(this.state.loading){\n\t\t\treturn(\n\t\t\t\t<div className=\"JokeList-spinner\">\n\t\t\t\t\t<i className=\"far fa-8x fa-laugh fa-spin\"/>\n\t\t\t\t\t<h1 className=\"JokeList-title\">Loading Jokes...</h1>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\tlet jokes = this.state.jokes.sort((a,b) => b.votes - a.votes);\n\t\treturn(\n\t\t\t<div className=\"JokeList\">\n\t\t\t\t<div className=\"JokeList-sidebar\">\n\t\t\t\t\t<h1 className=\"JokeList-title\"><span>Dad</span> Jokes</h1>\n\t\t\t\t\t<img src='https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg' alt=\"LMFAO\"/>\n\t\t\t\t\t<button className=\"JokeList-getmore\" onClick={this.handleClick}>New Jokes</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"JokeList-jokes\">\n\t\t\t\t\t{jokes.map( j => (\n\t\t\t\t\t\t<Joke text={j.text} votes={j.votes} handleVote={this.handleVote} id={j.id} key={j.id}/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JokeList;","import React from 'react';\nimport './App.css';\nimport JokeList from './JokeList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <JokeList/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}